//Leetcode - 1- Two Sum
//Brute Force

public int[] twoSum(int[] nums, int target){
  if(nums != null && nums.length == 1 && target == nums[0]){
    return target;
  }

  if(nums != null && nums.length > 0){
     int n = nums.length;
     int[] result = new result[2];
    for(int i=0;i<n;i++){
        for(int j = i+1;j<n;j++){
           if(nums[i] + nums[j] == target){
              result[0] = nums[i];
              result[1] = nums[j];
              return result;
           }
        }
    }
  }
}

//using Hashmap
public int[] twoSum(int[] nums, int target){
  int n = nums.length;
  int[] result = new int[2];
  
  HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
    for(int i=0;i<n;i++){
        if(map.containsKey(nums[i])){
            result[0] = map.get(nums[i]);
            result[1] = i;
            break;
        }
        else{
            map.put(target - nums[i], i);
        }

  }
  return result;
  
  }
