class TreeNode{
	TreeNode left;
	TreeNode right;
	int val;

	public TreeNode(int val){
		this.val = val;
	}
}

public class TreeCheck{
	
	public static void main(String args[]){
		TreeNode a = new TreeNode(1);
		TreeNode b = new TreeNode(2);
		TreeNode c = new TreeNode(3);
		TreeNode d = new TreeNode(4);
		TreeNode e = new TreeNode(5);
		TreeNode f = new TreeNode(6);
		TreeNode g = new TreeNode(7);
		a.left = b;
		a.right = c;
		b.left = d;
		b.right = e;
		c.left = f;
		c.right = g;
	
	TreeNode h = new TreeNode(8);
	TreeNode i = new TreeNode(9);
	TreeNode j = new TreeNode(10);
	TreeNode k = new TreeNode(11);
	
	int s = 0;
	//s = size(a);
	insert(a,h,"right");
	//s = size(a);
	//insert(a,i,"right");
	//s = size(a);
	insert(a,j,"left");
	//s = size(a);
	//insert(a,k,"left");
	s = size(a);
	
  }
  
  public static void insert(TreeNode root, TreeNode newNode , String side){
    if(root == null || newNode == null)
      return;
    
    if(root.left == null){
      if(side.equals("left"))
        root.left = newNode;
      else
        root.right = newNode;
    }
    else{
      if(side.equals("left"))
        insert(root.left, newNode,"left");
      else
        insert(root.right, newNode,"right");
    }
    
  }
  
  public static int size(TreeNode root){
    if(root == null)
      return 0;
      
    int sleft = size(root.left);
    int sright = size(root.right);
    
    return sleft + sright + 1;
  }
  
}	
